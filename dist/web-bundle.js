window.MessaGet=function(t){var e={};function s(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,s),i.l=!0,i.exports}return s.m=t,s.c=e,s.d=function(t,e,n){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)s.d(n,i,function(e){return t[e]}.bind(null,i));return n},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=0)}([function(t,e,s){"use strict";s.r(e),s.d(e,"MessaGetClient",(function(){return l})),s.d(e,"MessaGetController",(function(){return c})),s.d(e,"MessaGet",(function(){return u}));var n=function(){function t(){this.eventHandlersMap={"*":new Map},this.isDebug=!1,this.fire=this.emit,this.listen=this.on,this.subscribe=this.on,this.remove=this.off,this.unsubscribe=this.off}return t.prototype.addEventHandler=function(t,e,s){void 0===s&&(s=!1),this.eventHandlersMap[t]||(this.eventHandlersMap[t]=new Map),e&&!this.eventHandlersMap[t].has(e)&&this.eventHandlersMap[t].set(e,s)},t.prototype.callHandlers=function(t,e,s){var n=this;this.eventHandlersMap[t]&&this.eventHandlersMap[t].forEach((function(i,r){r&&r(e,{eventName:s||t,isOnce:i}),i&&n.off(t,r)}))},t.prototype.setDebug=function(t){return this.isDebug=t,this},t.prototype.on=function(t,e){return this.addEventHandler(t,e),this},t.prototype.once=function(t,e){return this.addEventHandler(t,e,!0),this},t.prototype.off=function(t,e){return this.eventHandlersMap[t]?(e&&this.eventHandlersMap[t].has(e)&&this.eventHandlersMap[t].delete(e),this):this},t.prototype.emit=function(t,e){this.isDebug&&console.info("["+this.constructor.name+"]: Fires "+t),this.callHandlers("*",e,t),this.callHandlers(t,e)},t}();const i={CONNECTING:"CONNECTING",CONNECT:"CONNECT",ERROR:"ERROR",DISCONNECT:"DISCONNECT",MESSAGE:"MESSAGE"};class r{constructor(t,e,s={}){if(this._eventManager=new n,this._server=t,this._namespace=e,this._endpiont="",this._isConnected=!1,this._isConnecting=!1,s.secure?this._endpiont="wss://"+this._server:this._endpiont="ws://"+this._server,s.password&&(this._password=s.password),s.port&&(this._endpiont+=":"+s.port),0===e.length)throw new Error("You must provide a namespace")}on(t,e){this._eventManager.on(t,e)}connect(){this._setupWs()}_setupWs(){this._isConnected||this._isConnecting||(this._isConnecting=!0,this._ws=new WebSocket(this._buildEndpoint()),this._ws.onclose=t=>{this._isConnected=!1,this._isConnecting=!1,this._eventManager.fire(i.DISCONNECT,t)},this._ws.onerror=t=>{this._isConnected=!1,this._isConnecting=!1,this._eventManager.fire(i.ERROR,t)},this._ws.onmessage=t=>{this._eventManager.fire(i.MESSAGE,t.data)},this._ws.onopen=t=>{this._isConnected=!0,this._isConnecting=!1,this._eventManager.fire(i.CONNECT,t)})}_buildEndpoint(){return this._endpiont+"/public/attach?namespace="+this._namespace+"&password="+this._password}}class a{constructor(t,e,s,n){this._controller=t,this._id=e,this._namespace=s,this._ip=n}async kick(){await this._controller._makeRequest({intent:"KICK_CLIENTS_BY_ID",targets:[this._id]})}async sendMessage(t){if(0===(await this._controller._makeRequest({intent:"SEND_TO_IDS",targets:[this._id],message:t})).sent)throw new Error("Failed to send, this client is probably already offline.")}getId(){return this._id}getNamespace(){return this._namespace}getIp(){return this._ip}}class o{constructor(t,e){this._finished=!1,this._resolve=null,this._reject=null,this._promise=new Promise((t,e)=>{this._resolve=t,this._reject=e}),setTimeout(()=>{this._finished&&(delete t._pendingWsRequests[e],this._reject("Request timed out..."))},3e3)}fail(t,e){this._finished=!0,this._reject(e+" - "+t)}resolve(t,e){if(this._finished=!0,200!==t)throw new Error(t+" - "+JSON.stringify(e));this._resolve(e)}getPromise(){return this._promise}}const h={CLIENT_JOINED:"CLIENT_JOINED",CLIENT_LEFT:"CLIENT_LEFT",BUS_CONNECTED:"BUS_CONNECTED",BUS_DISCONNECTED:"BUS_DISCONNECTED"};class _{constructor(t,e,s={}){this._eventManager=new n,this._server=t,this._password=e,this._endpiont="",this._isConnected=!1,this._isConnecting=!1,this._allowWs=!s.disableWs,this._pendingWsRequests={},s.secure?this._endpiont="https://"+this._server:this._endpiont="http://"+this._server,s.port&&(this._endpiont+=":"+s.port)}async sendMessageToIds(t,e){await this._makeRequest({intent:"SEND_TO_IDS",targets:t,message:e})}async findAllClients(){let t=await this._makeRequest({intent:"LIST_CLIENTS"});return this._mapClientsArr(t)}async findClientById(t){let e=await this.findClientsByIds([t]);return 0===e.length?null:e[0]}async findClientsByPartialNamespace(t){let e=await this._makeRequest({intent:"FIND_BY_NAMESPACE",namespace:t}),s=this._mapClientsArr(e);return 0===s.length?null:s}async findClientsByExactNamespace(t){let e=await this._makeRequest({intent:"FIND_BY_NAMESPACE_EXACT",namespace:t}),s=this._mapClientsArr(e);return 0===s.length?null:s}async findClientsByIds(t){let e=await this._makeRequest({intent:"FIND_BY_IDS",targets:t});return this._mapClientsArr(e)}on(t,e){this._eventManager.on(t,e),this._setupWs()}_buildEndpoint(){return this._endpiont+"/api/intent?password="+this._password}_buildWsEndpoint(){return this._endpiont.replace("http","ws")+"/api/attach?password="+this._password}_handleWsInput(t){switch(t.event){case"CLIENT_ADD":this._eventManager.fire(h.CLIENT_JOINED,this._mapClientsArr([t.client])[0]);break;case"CLIENT_LEAVE":this._eventManager.fire(h.CLIENT_LEFT,this._mapClientsArr([t.client])[0]);break;case"TRANSACTION":let e=this._pendingWsRequests[t.transaction_id];if(null==e)return void console.error("Received response for unknown transaction "+t.transaction_id);t.failed?e.fail(t.status,t.response):e.resolve(t.status,t.response)}}_setupWs(){if(this._isConnected||this._isConnecting)return;this._isConnecting=!0,this._ws=new WebSocket(this._buildWsEndpoint());let t=()=>{this._eventManager.fire(h.BUS_DISCONNECTED,null),setTimeout(()=>{this._setupWs()},150)};this._ws.onclose=e=>{this._isConnected=!1,this._isConnecting=!1,t()},this._ws.onerror=e=>{this._isConnected=!1,this._isConnecting=!1,t()},this._ws.onmessage=t=>{this._handleWsInput(JSON.parse(t.data))},this._ws.onopen=t=>{this._isConnected=!0,this._isConnecting=!1,this._eventManager.fire(h.BUS_CONNECTED,null)}}_mapClientsArr(t){let e=[];for(let s=0;s<t.length;s++){let n=t[s];e.push(new a(this,n.id,n.namespace,n.ip))}return e}async _makeRequest(t){return this._isConnected?await this._makeWsRequest(t):(this._allowWs&&this._setupWs(),await this._makeHttpRequest(t))}_makeWsRequest(t){let e=function(t){let e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",s="";for(let n=0;n<t;n++)s+=e.charAt(Math.floor(Math.random()*e.length));return s}(25);return this._pendingWsRequests[e]=new o(this,e),t.transaction_id=e,this._ws.send(JSON.stringify(t)),this._pendingWsRequests[e].getPromise()}async _makeHttpRequest(t){try{let e=await fetch(this._buildEndpoint(),{body:JSON.stringify(t),method:"POST"});if(200!==e.status)throw new Error("Failed to make request");return await e.json()}catch(t){throw console.error(t),new Error("Failed to make request")}}}const l=r,c=_,u={Client:r,Controller:_,Events:i,ControllerEvents:h}}]);